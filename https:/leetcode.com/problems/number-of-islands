class Solution {
public:
    int rows[4] = {1,0,-1,0};
    int cols[4] = {0,1,0,-1};
    // bool alpha(int i,int j,int m,int n){
    //     if() return false;
    //     else return true;
    // }
    
     bool search(vector<vector<char>>& grid, int i, int j) {
        if (i < 0 || i >= grid.size() || j < 0 || j >= grid[0].size() || grid[i][j] != '1')
            return false;
        grid[i][j] = -1;
        for (int k = 0; k < 4; k++) {
            search(grid, i + rows[k], j + cols[k]);
        }
        return true;
    }
    
    int numIslands(vector<vector<char>>& grid) {
        int m=grid.size();
        int n=grid[0].size();
        int ans=0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(search(grid,i,j)){
                    ans++;
                }
            }
        }
        return ans;
    }
};
