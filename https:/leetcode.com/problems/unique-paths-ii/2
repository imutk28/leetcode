class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& mn) {
        int m=mn.size();
        int n=mn[0].size();
        int dp[m][n];
        memset(dp,0,sizeof(dp));
        if(mn[0][0]==1) dp[0][0] =0;
        else dp[0][0]=1;
        if(m == 1 and n == 1 and mn[0][0]==1)
            return 0;
        for(int i=1;i<m;i++){
            if(mn[i][0]==1) dp[i][0]=0;
            else dp[i][0]=dp[i-1][0];
        }
        for(int i=1;i<n;i++){
            if(mn[0][i]==1) dp[0][i]=0;
            else dp[0][i]=dp[0][i-1];
        }
        // dp[0][0]=0;
        for(int i=1;i<m;i++){
            for(int j=1;j<n;j++){
                if(mn[i][j]==1) dp[i][j]=0;
                else dp[i][j]=dp[i-1][j]+dp[i][j-1];
            }
        }
        return dp[m-1][n-1];
    }
};
